/**
 * Merge Sort
 */

merge_sort(array, start, end) {
  if (start < end) {
    int mid = (start + end) / 2;

    merge_sort(array, start, mid);
    merge_sort(array, mid + 1, end);
    
    return merge(array, start, end, mid);
  }
}

merge(array, start, end, mid) {
  int left_size = mid - start + 1;
  int right_size = end - mid;
  int left[left_size], right[right_size];

  for (i = 0 to left_size - 1) {
    left[i] = array[start + i];
  }

  for (j = 0 to right_size - 1) {
    right[j] = array[mid + j + 1]
  }

  left[left_size] = right[right_size] = inf;

  int i = j = 0;

  for (k = start to end) {
    if (left[i] <= right[j]) {
      array[k] = left[i];
      i++;
    } else {
      array[k] = right[j];
      j++;
    }
  }

  return array;
}