LCS_length(X, m, Y, n)
 for i=0 to m
     C[i,0] = 0                           // Inizializza la prima colonna della tabella C a 0
 for j=1 to n                             // La cella C[0,0] è già 0
     C[0,j] = 0                           // Inizializza la prima riga della tabella C a 0
 for i=1 to m
     for j=1 to n
         if X[i] == Y[j]                  // Se i caratteri corrispondono
             C[i,j] = C[i-1,j-1] + 1      // Aumenta la lunghezza della LCS
         else
            C[i,j] = max(C[i-1,j], C[i,j-1])  // Prendi il massimo tra i valori sopra e a sinistra
 return C                               // Restituisce la tabella C con le lunghezze della LCS



 LCS_maxPath(X,m,Y,n){
    for(i = 1 to m){
        C[i,0] = 0
    }
    for( j = 1 to n){
        C[0,j] = 0
    }
    for i = 1 to m{
        for j = 1 to n{
            if(X[i] == Y[y]){
                C[i,j] = C[i-1,j-1] + 1
            }
            else{
                C[i,j] = max(C[i-1,j], C[i,j-1])
            }
        }
    }
    return C
 }