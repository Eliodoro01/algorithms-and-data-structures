LCS_length_withPath(X, m, Y, n)
 for i=0 to m
     C[i,0] = 0                           // Inizializza la prima colonna della tabella C a 0
 for j=1 to n                             // La cella C[0,0] Ã¨ giÃ  0
     C[0,j] = 0                           // Inizializza la prima riga della tabella C a 0
 for i=1 to m
    for j=1 to n
        if X[i] == Y[j]                  // Se i caratteri corrispondono
            C[i,j] = C[i-1,j-1] + 1      // Aumenta la lunghezza della LCS
            P[i,j] = "\"                 // Segna la direzione diagonale nella tabella P
        
        else if C[i-1,j] > C[i,j-1]       // Se il valore sopra Ã¨ maggiore di quello a sinistra
            C[i,j] = C[i-1,j]             // Prendi il valore sopra
            P[i,j] = "|"                  // Segna la direzione verso l'alto nella tabella P
        else
            C[i,j] = C[i,j-1]             // Prendi il valore a sinistra
            P[i,j] = "-"                // Segna la direzione verso sinistra nella tabella P
return C                                // Restituisce la tabella C con le lunghezze della LCS



lcs_lenght(X,m,Y,n){

    for i = 1 to m{
        C[i,0] = 0
    }
    for j = 1 to n{
        C[0,j] = 0
    }

    for i = 1 to m{
        for j = 1 to n{
            if(X[i] == Y[j]){
                C[i,j] = C[i-1,j-1] + 1
                P[i,j] = "\"
            }
            else if(C[i-1, j] > C[i, j-1]){
                C[i,j] = C[i-1,j]
                P[i,j] = "|"
            }
            else{
                C[i,j] = C[i,j-1]
                P[i,j] = "-"
            }
        } 
    }
    return C
}


lcs_lengt(X,m,Y,n){

    for i = 1 to m{
        C[i,0] = 0
    }
    for j = 1 to n{
        C[0,j] = 0
    }

    for i = 1 to m{
        for j = 1 to n{
            if X[i] == Y[j]{
                C[i,0] = C[i-1,j-1] + 1
                P[i,j] = "\"
            }
            else if(C[i-1, j] > C[i,j-1]){
                C[i,j] = C[i-1,j]
                P[i,j] = "|"
            }
            else{
                C[i,j] = C[i,j-1]
                P[i,j] = "-"
            }
        }
    }

    return C
}