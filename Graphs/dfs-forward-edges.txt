/**
 * Dato un grafo orientato G = (V, E), scrivere un algoritmo
 * che restituisca il numero degli archi in avanti nel grafo.
 */

trasversal_edges: int = 0;
time: int = 0

dfs(graph) {

  time = 0
  trasversal_edges = 0
  
  for (node in graph.nodes) {
    node.predecessor = null;
    node.d = 0;
    node.f = 0;
    node.color = white;
  }

  for (node in graph.nodes) {
    if (node.color == white) {
      dfs_visit(node);
    }
  }
}


dfs_visit(node) {

  time += 1
  node.color = gray;
  node.d = time;

  for (adj_node in node.adj) {

     if (adj_node.color == white) {
      adj_node.predecessor = node;
      dfs_visit(adj_node); 
    }

    else if (adj_node.color == black && node.d < adj_node.d) { //Il tempo di inizio visita del padre (nodo sorgente) Ã¨ maggiore del tempo di inizio visita del nodo destinazione
      trasversal_edges++    
    } 
  }

  time += 1
  node.f = time;
  node.color = black;
}