/**
 * visita DFS che tiene conto anche di cappi e cicli di un grafo
 */

cycles: int = 0
self_loops: int = 0
time: int = 0

dfs(graph) {

  time = 0
  self_loops = 0
  cycles = 0

  for (node in graph.nodes) {
    node.color = white;
    node.predecessor = null;
    node.d = 0;
  }

  for (node in graph.nodes) {
    if (node.color == white) {
      dfs_visit(node);
    }
  }
}

dfs_visit(node) {
  time += 1
  node.color = gray;
  node.d = time;

  for (adj_node in node.adj) {
    if (adj_node == node) {                         
      self_loops++;                           // self loop
    } else if (adj_node.color == white) {
      adj_node.predecessor = node;

      dfs_visit(adj_node);
    } else if (adj_node.color == gray) {
      cycles++;                               // cycle
    }
  }

  time += 1
  node.f = time;
  node.color = black;
}


